generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  UserID      Int       @id @default(autoincrement())
  FirstName       String    @db.VarChar(25)
  MiddleName      String?   @db.VarChar(25)
  LastName        String    @db.VarChar(25)
  Role        String    @db.VarChar(50)
  Status          Status    
  Sales           Sales[]
  Purchases       Purchase[]
  Username        Username[]
}

model Username {
  Username    String      @id @unique @db.VarChar(50)
  UserID      Int
  PasswordID  Int
  User        User     @relation(fields: [UserID], references: [UserID])
  Password    Password @relation(fields: [PasswordID], references: [PasswordID])
}

model Password {
  PasswordID  Int      @id @default(autoincrement())
  Password    String
  Username    Username[]
}

model Customer {
  CustomerID      Int       @id @default(autoincrement())
  FirstName            String    @db.VarChar(50)
  MiddleName            String    @db.VarChar(50)
  LastName            String    @db.VarChar(50)
  ContactNumber   Int
  Sales           Sales[]
}

model Sales {
  SalesID         Int       @id @default(autoincrement())
  CustomerID      Int
  UserID      Int
  InvoiceNo       Int
  Date            DateTime
  TotalAmount     Float
  User        User  @relation(fields: [UserID], references: [UserID])
  Customer    Customer  @relation(fields: [CustomerID], references: [CustomerID])
  SalesItems      SalesItem[]
}

model SalesItem {
  SalesItemID     Int       @id @default(autoincrement())
  SalesID         Int
  ItemID          Int
  InventoryId     Int?
  Quantity        Int
  Weight          Float?
  PricePerUnit    Float?
  Sales           Sales     @relation(fields: [SalesID], references: [SalesID])
  Item            Item      @relation(fields: [ItemID], references: [ItemID])
}

model Supplier {
  SupplierID      Int       @id @default(autoincrement())
  FirstName            String    @db.VarChar(50)
  MiddleName            String    @db.VarChar(50)
  LastName            String    @db.VarChar(50) 
  ContactNumber   Int
  Purchases       Purchase[]
}

model Purchase {
  PurchaseID          Int       @id @default(autoincrement())
  UserID          Int
  SupplierID          Int
  OfficialReceiptNo   Int?
  Agent               String?   @db.VarChar(50)
  Date                DateTime
  TotalAmount         Float
  User            User  @relation(fields: [UserID], references: [UserID])
  Supplier        Supplier  @relation(fields: [SupplierID], references: [SupplierID])
  PurchaseItems       PurchaseItem[]
}

model PurchaseItem {
  PurchaseItemID  Int     @id @default(autoincrement())
  PurchaseID      Int
  itemID          Int
  Quantity        Int
  Weight          Float?
  PricePerUnit    Float?
  Purchase        Purchase    @relation(fields: [PurchaseID], references: [PurchaseID])
  Item            Item        @relation(fields: [itemID], references: [ItemID])
}

model Item {
  ItemID        Int      @id @default(autoincrement())
  Name          String?  @db.VarChar(50)
  Type          String   @db.VarChar(50)
  Quality       String?  @db.VarChar(50)
  Variety       String?  @db.VarChar(50)
  SalesItems    SalesItem[]
  PurchaseItems PurchaseItem[]
  Inventory   Inventory[]
}

model Inventory {
  InventoryID   Int        @id @default(autoincrement())
  ItemID        Int
  Quantity      Int
  Acquisition   Acquisition
  Item          Item       @relation(fields: [ItemID], references: [ItemID])
}

enum Status {
  active
  inactive
}

enum Acquisition {
  Bought
  Processed
}
