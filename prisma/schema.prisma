generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userid      Int       @id @default(autoincrement())
  firstname       String    @db.VarChar(25)
  middlename      String?   @db.VarChar(25)
  lastname        String    @db.VarChar(25)
  role        String    @db.VarChar(50)
  status          Status    
  username    String      @unique @db.VarChar(50)
  password    String
  sales           Sales[]
  purchases       Purchase[]
}

model Customer {
  customerid      Int       @id @default(autoincrement())
  firstname            String    @db.VarChar(50)
  middlename            String    @db.VarChar(50)
  lastname            String    @db.VarChar(50)
  contactnumber   Int
  Sales           Sales[]
}

model Sales {
  salesid         Int       @id @default(autoincrement())
  customerid      Int
  userid      Int
  invoiceno       Int
  date            DateTime
  totalamount     Float
  user        User  @relation(fields: [salesid], references: [userid])
  customer    Customer  @relation(fields: [customerid], references: [customerid])
  SalesItems      SalesItem[]
}

model SalesItem {
  salesitemid     Int       @id @default(autoincrement())
  salesid         Int
  itemid          Int
  inventoryid     Int?
  quantity        Int
  weight          Float?
  priceperunit    Float?
  Sales           Sales     @relation(fields: [salesitemid], references: [salesid])
  Item            Item      @relation(fields: [itemid], references: [itemid])
}

model Supplier {
  supplierid      Int       @id @default(autoincrement())
  firstname            String    @db.VarChar(50)
  middlename            String    @db.VarChar(50)
  lastname            String    @db.VarChar(50) 
  contactnumber   Int
  Purchase       Purchase[]
}

model Purchase {
  purchaseid          Int       @id @default(autoincrement())
  userid          Int
  supplierid          Int
  officialreceiptno   Int?
  agent               String?   @db.VarChar(50)
  date                DateTime
  totalamount         Float
  User            User  @relation(fields: [purchaseid], references: [userid])
  Supplier        Supplier  @relation(fields: [supplierid], references: [supplierid])
  PurchaseItems       PurchaseItem[]
}

model PurchaseItem {
  purchaseitemid  Int     @id @default(autoincrement())
  purchaseid      Int
  itemid          Int
  quantity        Int
  weight          Float?
  pricePerUnit    Float?
  Purchase        Purchase    @relation(fields: [purchaseitemid], references: [purchaseid])
  Item            Item        @relation(fields: [itemid], references: [itemid])
}

model Item {
  itemid        Int      @id @default(autoincrement())
  name          String?  @db.VarChar(50)
  type          String   @db.VarChar(50)
  quality       String?  @db.VarChar(50)
  variety       String?  @db.VarChar(50)
  salesitem    SalesItem[]
  purchaseitem PurchaseItem[]
  Inventory   Inventory[]
}

model Inventory {
  inventoryid   Int        @id @default(autoincrement())
  itemid        Int
  quantity      Int
  Item          Item       @relation(fields: [inventoryid], references: [itemid])
}

enum Status {
  active
  inactive
}