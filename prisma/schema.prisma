generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userid          Int               @id @default(autoincrement())
  imagepath       String?
  firstname       String            @db.VarChar(25)
  middlename      String?           @db.VarChar(25)
  lastname        String            @db.VarChar(25)
  role            Role
  status          Status
  username        String            @unique @db.VarChar(50)
  password        String
  recentdelete         Boolean           @default(false)
  createdat       DateTime          @default(now())
  Item            Item[]
  TransactionItem TransactionItem[]
  Transaction     Transaction[]
}


model DocumentNumber {
  documentnumberid Int           @id @default(autoincrement())
  documentnumber   String        @unique @db.VarChar(30)
  recentdelete         Boolean       @default(false)
  transaction     Transaction[]
}

model Transaction {
  transactionid   Int               @id @default(autoincrement())
  type            TransactionType
  status          TransactionStatus
  walkin          Boolean           @default(false)
  frommilling     Boolean           @default(false)
  totalamount     Float?
  createdat       DateTime          @default(now())
  lastmodifiedby  Int?
  lastmodifiedat  DateTime?         @updatedAt
  documentnumberid Int?
  recentdelete         Boolean           @default(false)
  DocumentNumber   DocumentNumber?    @relation(fields: [documentnumberid], references: [documentnumberid])
  User            User?             @relation(fields: [lastmodifiedby], references: [userid])
  TransactionItem TransactionItem[]
}

model TransactionItem {
  transactionitemid Int                   @id @default(autoincrement())
  transactionid     Int
  itemid            Int
  type              ItemType
  sackweight        SackWeightType
  unitofmeasurement UnitofMeasurementType
  measurementvalue  Float?
  unitprice         Float?
  totalamount       Float
  lastmodifiedby    Int?
  lastmodifiedat    DateTime?             @updatedAt
  recentdelete           Boolean               @default(false)
  Transaction       Transaction           @relation(fields: [transactionid], references: [transactionid])
  Item              Item                  @relation(fields: [itemid], references: [itemid])
  user              User?                 @relation(fields: [lastmodifiedby], references: [userid])
}

model Item {
  itemid            Int                   @id @default(autoincrement())
  name              String?               @db.VarChar(50)
  type              ItemType
  sackweight        SackWeightType
  unitofmeasurement UnitofMeasurementType
  stock             Float?
  unitprice         Float?
  lastmodifiedby    Int?
  lastmodifiedat    DateTime?             @updatedAt
  recentdelete           Boolean               @default(false)
  User              User?                 @relation(fields: [lastmodifiedby], references: [userid])
  itemimage         ItemImage[]
  Item              TransactionItem[]
}

model ItemImage {
  imageid   Int    @id @default(autoincrement())
  itemid    Int
  imagepath String
  Item      Item   @relation(fields: [itemid], references: [itemid])
}

enum SackWeightType {
  bag25kg
  cavan50kg
}

enum TransactionType {
  purchase
  sales
}

enum UnitofMeasurementType {
  quantity
  weight
}

enum Status {
  active
  inactive
}

enum TransactionStatus {
  pending
  paid
  cancelled
}

enum ItemType {
  bigas
  palay
  resico
}

enum Role {
  admin
  manager
  sales
  inventory
}
